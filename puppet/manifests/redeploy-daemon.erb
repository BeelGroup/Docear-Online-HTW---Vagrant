#!/bin/sh

set -x

### BEGIN INIT INFO
# Provides:          <%= @redeploy_name %>
# Required-Start:    $local_fs $remote_fs
# Required-Stop:     $local_fs $remote_fs
# Should-Start:      $network
# Should-Stop:       $network
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Demonized to deploy new artifacts of <%= @name %>.
# Description:
### END INIT INFO

ARTIFACT="<%= @artifact %>"
NAME="<%= @name %>"
APPLICATION_NAME="<%= @redeploy_name %>"

PID_FOLDER="/tmp/${APPLICATION_NAME}"
PIDFILE="${PID_FOLDER}/RUNNING_PID"
LOGFILE="${PID_FOLDER}/log.txt"

mkdir -p ${PID_FOLDER}


start() {
    echo try to stop running demon, it should not be started twice
    stop
    echo starting  > ${LOGFILE} 2>&1
    start-stop-daemon --start --verbose --background --make-pidfile --pidfile ${PIDFILE}  --exec /etc/init.d/${APPLICATION_NAME} -- run $$ >> ${LOGFILE} 2>&1
}

run() {
    for_pid=$1
    echo run redeploy demon $APPLICATION_NAME for pid $for_pid
    echo run redeploy demon $APPLICATION_NAME for pid $for_pid  >> ${LOGFILE} 2>&1
    pid_pid_file=`cat $PIDFILE`
    while [ "$pid_pid_file" == "$for_pid" ]; do
        echo waiting for changes of file ${ARTIFACT} on $(date) >> ${LOGFILE} 2>&1
        echo waiting for changes of file ${ARTIFACT} on $(date)
        inotifywait -e close_write ${ARTIFACT} >> ${LOGFILE} 2>&1
        pid_pid_file=`cat $PIDFILE`
        if [ "$pid_pid_file" == "$for_pid" ]; then
            echo redeploy ${ARTIFACT} >> ${LOGFILE} 2>&1 && \
            service ${NAME} next >> ${LOGFILE} 2>&1
        else
            echo "outdated run"
        fi
    done
    echo "leave run"
}

stop() {
    echo stopping  >> ${LOGFILE} 2>&1
    echo "Stopping Application: ${APPLICATION_NAME}
    kill -15 `cat ${PIDFILE}`
    killall ${APPLICATION_NAME}
    rm -rf ${PIDFILE}
}
clean() {
    echo "clean not implemented"
}

case "$1" in
        start)
        clean
        start
        ;;
        stop)
        stop
        ;;
        restart|reload)
        stop
        sleep 10
        start
        ;;
        status)
        status
        ;;
        run)
        run $2
        ;;
        next)
        next
        ;;
        *)
        echo "Usage: $0 {start|stop|restart|next}"
esac
exit 0